задача: реализовать observable и computed как в кнокауте.

на основе WeakMap




текущее:
.реализовать подписку на события.



вычислимые и наблюдаемые...
.observable:
  .можно подписаться на его изменение.
  .можно освободить - высвобождаться все подписки.
  .нужно как-то зафиксировать вызов - что-бы его можно было перехватить в computed.

.computed:
  .при создании получает функцию, которая вычисляет его значение.
  .в процессе вычисления подписываеться на все задетые observable.
  .при изменении одного из observable пересчитыват значение computed.

.в итоге, что я вижу?
  .два объекта связанны между собой.
  .одно дело - создать observable и потом к нему подписаться.
  .другое - computed в котором использован набор observable.
  .и 3-е - computed, в котором использованы другие computed.
=> есть инфраструктура, некий более общий объект, частями которого являються эти 2.

+ а мой разрез на области как повлияет на эту инфраструктуру?
  .ведь работа с областью превращаеться в неч-то похожее:
    .получить занчение - по вызову.
    .установить значение - вызов.
  + наличие основной части, у которой получаю скоупы, и которая контролирует их запуск.

  .другими словами, интерфейс может быть разширен 1-м методом - получить скоуп,
   и интерфейсом, в скоуп передаваемым (который даёт возможность создать внутренние вещи)


далее:
.добавить ди (di-light).
.поработать с фикстурой подмешиваемо через ди.


далее:
.надо описать подгрузку домена в тестах Computet/Observable.
+ разобраться как этой подгрузке задавать фикстуры по необходимости.