
вопросы:
.как отрабатывать продолжения - передачю управления другим затронутым скоупам?

.каков общий сценарий использования?

.вызов функций либо обёртка observable/computed ?
.как строиться интерфейс для передачи куда-либо?

.что есть ядром идеи?

.как прервать работу js кода извне?


наброски:
.общий сценария:
    .создать набор скоупов, прокинуть между ними взаимосвязи, запустить выполнение.
    .каждый скоуп может дёргать интерфейс который есть.
    .интерфейс откладывает выполнение либо пробрасывает значение.


.ядро идеи:
    .посылка сообщения.



тестовое применение:
.игра крестики нолики. Где в наличии 3 скоупа:
    .автомата игры:
        .наблюдаемый состояния:
            .чей ход.
            .2-х мерный массив поля.
            .кто выиграл.
        .методы для вызова:
            .координаты для первого.
            .координаты хода второго.

    .2 автомата игроков:
        .по существу они только наблюдают за состоянием игры,
        и дёргают методы установки хода.


.зачем тут buffered-scopes?
    .