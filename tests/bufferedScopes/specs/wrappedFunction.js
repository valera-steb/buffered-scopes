/**
 * Created on 28.10.2015.
 */

describe('bufferedScopes/wrappedFunction', function(){

    xdescribe('подумать', function(){

        it('добавить работу с промайсами - как возвращение результата');
    });


    xit('должна при вызове из за пределов своего скоупа ' +
        'запоминать переданное значение и ставить свой скоуп в очередь', function(){

    });


    describe('должна упаковывать свой параметр', function(){

        xit('функции - если они не обёртки/observable/computed - в обёртки');

        xit('значения - делать глубокую копию');

        xit('функции в обёртки - для текущего скоупа');

        xit('функции в обёртки - для глобального внешнего если из-за пределов скоупов');
    });


    xit('должна позволять делать force - если вне скоупов сразу запускать свой скоуп');

    xit('должна возвращать функцию запуска пересчёта');

    xit('функция пересчёта одноразовая - т.е. её вызов после получения целевым ' +
        'скоупом фокуса не приведёт к повторному пересчёту');

    xit('если вызов внутри своего скоупа - установка отложенная');

    xit('если вызов внутри своего скоупа с force - выполнять сразу');
});
